CHAR는 255자, VARCHAR는 16383자까지 가능
TEXT, LONGTEXT 등을 활용하여 더 큰 데이터 저장 가능
BLOB(Binary Long Object), LONGBLOB 등을 활용하여 이미지, 동영상 등 데이터 저장 가능
FLOAT은 소수점 7자리, DOUBLE은 소수점 15자리

CREATE TABLE hongong4 (
tinyint_col TINYINT, smallint_col SMALLINT, int_col INT, bigint_col BIGINT);

CREATE TABLE movie (
movie_id INT, movie_title VARCHAR(30), movie_director VARCHAR(20), movie_star VARCHAR(20), movie_script LONGTEXT, movie_film LONGBLOB);

변수는 MySQL 워크벤치를 재시작할 때까지만 유지
SET @myVal1 = 5 ; -- 변수 설정 / LIMIT에는 원칙적으로 변수 사용 불가
SET @myVal2 = 4.25 ;
SET @txt = '가수이름: ' ;
SET @height = 162 ;
SELECT @myVal1, @myVal2, @myVal1 + @myVal2;
SELECT @txt , mem_name FROM member WHERE height > @height;

SET @count = 3;
PREPARE mySQL FROM 'SELECT mem_name, height FROM member ORDER BY height LIMIT ?';
EXECUTE mySQL USING @count;

SELECT CAST(AVG(price) AS UNSIGNED) '평균 가격' FROM buy;
SELECT CAST('2022/12/12' AS DATE);

SELECT num, CONCAT(CAST(price AS CHAR), 'X', CAST(amount AS CHAR), '=' ) '가격x수량', price*amount '구매액' FROM buy;

SELECT * FROM buy JOIN member ON buy.mem_id = member.mem_id
WHERE buy.mem_id = 'GRL';

SELECT B.mem_id, mem_name, prod_name, addr, CONCAT(phone1, phone2) '연락처'
FROM buy B JOIN member M ON B.mem_id = M.mem_id;

SELECT M.mem_id, M.mem_name, B.prod_name, M.addr
FROM member M LEFT JOIN buy B USING (mem_id);

SELECT DISTINCT M.mem_id, B.prod_name, M.mem_name, M.addr
FROM member M LEFT JOIN buy B USING (mem_id)
WHERE B.prod_name IS NULL
ORDER BY M.mem_id;

DROP PROCEDURE IF EXISTS ifProc1;
DELIMITER //
CREATE PROCEDURE ifProc1()
BEGIN
IF 100 = 100 THEN
SELECT '100은 100과 같습니다.';
END IF;
END //
DELIMITER ;
CALL ifProc1();

DROP PROCEDURE IF EXISTS ifProc2;
DELIMITER //
CREATE PROCEDURE ifProc2()
BEGIN
DECLARE myNum INT;
SET myNum = 200;
IF myNum = 100 THEN
SELECT '100입니다.';
ELSE
SELECT '100이 아닙니다.';
END IF;
END //
DELIMITER ;
CALL ifProc2();

SELECT CURRENT_DATE(), DATEDIFF('2021-12-31', '2000-01-01');

SELECT M.mem_id, M.mem_name, SUM(price * amount) '총구매액',
CASE
WHEN (SUM(price * amount) >= 1500) THEN '최우수고객'
WHEN (SUM(price * amount) >= 1000) THEN '우수고객'
WHEN (SUM(price * amount) >= 1) THEN '일반고객'
ELSE '일반고객'
END '회원등급'
FROM buy B RIGHT JOIN member M ON B.mem_id = M.mem_id
GROUP BY M.mem_id;

DROP PROCEDURE IF EXISTS whileProc;
DELIMITER $$
CREATE PROCEDURE whileProc2()
BEGIN
DECLARE i INT;
DECLARE hap INT;
SET i = 1;
SET hap = 0;
WHILE (i <= 100) DO
SET hap = hap + i;
SET i = i + 1;
END WHILE;
SELECT hap;
END $$
DELIMITER ;
CALL whileProc2();